// potential syntax sketches



// Bit-field descriptions are of the form:
// BITMASK [BITRANGE] FIELDNAME (RESETVALUE) DESCRIPTION


type Map sio_hw @ 0xd0000000 {
    
    // Processor core identifier
    // 0xffffffff [31:0]  CPUID        (-) Value is 0 when read from processor core 0, and 1 when...
    io_ro_32 cpuid
 
    // Input value for GPIO pins
    // 0x3fffffff [29:0]  GPIO_IN      (0x00000000) Input value for GPIO0
    io_ro_32 gpio_in
 
    // Input value for QSPI pins
    // 0x0000003f [5:0]   GPIO_HI_IN   (0x00) Input value on QSPI IO in order 0
    io_ro_32 gpio_hi_in

    // padding
 
    // GPIO output value
    // 0x3fffffff [29:0]  GPIO_OUT     (0x00000000) Set output level (1/0 -> high/low) for GPIO0
    io_alias gpio_out @ 0x10
      io_rw_32 rw
      io_wo_32 set
      io_wo_32 clr
      io_wo_32 togl

 
    _REG_(SIO_GPIO_OE_OFFSET) // SIO_GPIO_OE
    // GPIO output enable
    // 0x3fffffff [29:0]  GPIO_OE      (0x00000000) Set output enable (1/0 -> output/input) for GPIO0
    io_alias gpio_oe
        io_rw_32 rw
        io_wo_32 set
        io_wo_32 clr
        io_wo_32 togl

 
    // QSPI output value
    // 0x0000003f [5:0]   GPIO_HI_OUT  (0x00) Set output level (1/0 -> high/low) for QSPI IO0
    io_alias gpio_hi_out
    _REG_(SIO_GPIO_HI_OUT_OFFSET) // SIO_GPIO_HI_OUT
        io_rw_32 rw;
        io_wo_32 set
        io_wo_32 clr
        io_wo_32 togl
 
    // QSPI output enable
    // 0x0000003f [5:0]   GPIO_HI_OE   (0x00) Set output enable (1/0 -> output/input) for QSPI IO0
    io_alias gpio_hi_oe;
        io_rw_32 rw;
        io_wo_32 set
        io_wo_32 clr
        io_wo_32 togl
 
    // Status register for inter-core FIFOs (mailboxes).
    // 0x00000008 [3]     ROE          (0) Sticky flag indicating the RX FIFO was read when empty
    // 0x00000004 [2]     WOF          (0) Sticky flag indicating the TX FIFO was written when full
    // 0x00000002 [1]     RDY          (1) Value is 1 if this core's TX FIFO is not full (i
    // 0x00000001 [0]     VLD          (0) Value is 1 if this core's RX FIFO is not empty (i
    io_rw_32 fifo_st;
 
    // Write access to this core's TX FIFO
    // 0xffffffff [31:0]  FIFO_WR      (0x00000000) 
    io_wo_32 fifo_wr;
 
    // Read access to this core's RX FIFO
    // 0xffffffff [31:0]  FIFO_RD      (-) 
    io_ro_32 fifo_rd;
 
    // Spinlock state
    // 0xffffffff [31:0]  SPINLOCK_ST  (0x00000000) 
    io_ro_32 spinlock_st;
 
    // Divider unsigned dividend
    // 0xffffffff [31:0]  DIV_UDIVIDEND (0x00000000) 
    io_rw_32 div_udividend;
 
    // Divider unsigned divisor
    // 0xffffffff [31:0]  DIV_UDIVISOR (0x00000000) 
    io_rw_32 div_udivisor;
 
    // Divider signed dividend
    // 0xffffffff [31:0]  DIV_SDIVIDEND (0x00000000) 
    io_rw_32 div_sdividend;
 
    // Divider signed divisor
    // 0xffffffff [31:0]  DIV_SDIVISOR (0x00000000) 
    io_rw_32 div_sdivisor;
 
    // Divider result quotient
    // 0xffffffff [31:0]  DIV_QUOTIENT (0x00000000) 
    io_rw_32 div_quotient;
 
    // Divider result remainder
    // 0xffffffff [31:0]  DIV_REMAINDER (0x00000000) 
    io_rw_32 div_remainder;
 
    // Control and status register for divider
    // 0x00000002 [1]     DIRTY        (0) Changes to 1 when any register is written, and back to 0...
    // 0x00000001 [0]     READY        (1) Reads as 0 when a calculation is in progress, 1 otherwise
    io_ro_32 div_csr;

    // padding
  
    interp_hw_t interp[2]; @0x80
 
    // (Description copied from array index 0 register SIO_SPINLOCK0 applies similarly to other array indexes)
    // Spinlock register 0
    // 0xffffffff [31:0]  SPINLOCK0    (0x00000000) 
    io_rw_32 spinlock[32]; @0x100
}