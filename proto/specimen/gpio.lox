var pico_led = 0d25;

var GPIO_OUT = true;
var GPIO_IN = false;
var GPIO_FUNC_SIO = 0d5;

var RP2040 = true;

var PADS_BANK0_GPIO0_IE_BITS = 0x00000040;
var PADS_BANK0_GPIO0_OD_BITS = 0x00000080;
var PADS_BANK0_GPIO0_ISO_BITS = 0x00000100;

fun gpio_set_direction(pin, dir) {
    if (dir) {
        rpoke(0xd0000024, 0x1 << pin);
    }
    else {
        rpoke(0xd0000028, 0x1 << pin);
    }
}

fun gpio_put(pin, value) {
    if (value) {
        rpoke(0xd0000014, 0x1 << pin);
    }
    else {
        rpoke(0xd0000018, 0x1 << pin);
    }
}

fun gpio_init(pin) {
    gpio_set_direction(pin, GPIO_IN);
    gpio_put(pin, false);
    gpio_set_function(pin, GPIO_FUNC_SIO);
}

var REG_ALIAS_RW_BITS  = 0x0 << 0d12;
var REG_ALIAS_XOR_BITS = 0x1 << 0d12;
var REG_ALIAS_SET_BITS = 0x2 << 0d12;
var REG_ALIAS_CLR_BITS = 0x3 << 0d12;

fun hw_clear_bits(addr, bits_to_clear) {
    rpoke(addr + REG_ALIAS_CLR_BITS, bits_to_clear);
}

fun hw_xor_bits(addr, bits_to_xor) {
    rpoke(addr + REG_ALIAS_XOR_BITS, bits_to_xor);
}

fun hw_write_masked(addr, values, write_mask) {
    hw_xor_bits(addr, (rpeek(addr) ^ values) & write_mask);
}

var PADS_BANK0_BASE = 0x4001c000;
var IO_BANK0_BASE   = 0x40014000;

fun gpio_set_function(pin, function) {

    var pads_bank_0_pin = PADS_BANK0_BASE;
    pads_bank_0_pin = pads_bank_0_pin + 0d4;
    pads_bank_0_pin = pads_bank_0_pin + 0d4 * pin;

    // Set input enable on, output disable off
    hw_write_masked(pads_bank_0_pin,
                   PADS_BANK0_GPIO0_IE_BITS,
                   PADS_BANK0_GPIO0_IE_BITS | PADS_BANK0_GPIO0_OD_BITS
    );
    // Zero all fields apart from fsel; we want this IO to do what the peripheral tells it.
    // This doesn't affect e.g. pullup/pulldown, as these are in pad controls.
    var io_bank0_hw_pin = IO_BANK0_BASE;
    var ctrl_offset = (0d8 * pin) + 0d4;
    rpoke(io_bank0_hw_pin + ctrl_offset, function);

    if (!RP2040) {
        // Remove pad isolation now that the correct peripheral is in control of the pad
        hw_clear_bits(pads_bank_0_pin, PADS_BANK0_GPIO0_ISO_BITS);
    }
}

